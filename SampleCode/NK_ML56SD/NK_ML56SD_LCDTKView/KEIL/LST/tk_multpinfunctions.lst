C51 COMPILER V9.60.0.0   TK_MULTPINFUNCTIONS                                               04/28/2025 14:43:21 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TK_MULTPINFUNCTIONS
OBJECT MODULE PLACED IN .\Output\tk_multpinfunctions.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\tk_multpinfunctions.c LARGE OMF2 OPTIMIZE(4,SPEED) BROWSE INCDIR(..\.
                    -.\..\..\Library\Device\Include;..\..\..\..\Library\StdDriver\inc;..\..\..\..\Library\StdDriver\lib;..\..\..\..\Library\L
                    -CDLib;..\..\..\..\Library\TKlib) DEFINE(DEMO_FREERUN,BOARD_NUMAKER,MASS_FINETUNE) DEBUG PRINT(.\LST\tk_multpinfunctions.
                    -lst) TABS(2) OBJECT(.\Output\tk_multpinfunctions.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* SPDX-License-Identifier: Apache-2.0                                                                    
             - */
   4          /* Copyright(c) 2020 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   5          /*                                                                                                        
             - */
   6          /*--------------------------------------------------------------------------------------------------------
             --*/
   7          
   8          /**************************************************************************//**
   9           * @file     TK_Utility.c
  10           * @version  V1.00
  11           * $Revision: 4 $
  12           * $Date: 9/15/20 10:28a $
  13           * @brief    Some Utility Funcion for Calibration Using.
  14           * @note
  15           * Copyright (C) 2020 Nuvoton Technology Corp. All rights reserved.
  16           *
  17           ******************************************************************************/
  18          #include "ML51.h"
  19          #include "TKLib.h"
  20          #include "TK_Demo.h"
  21          
  22          /**************************************************************************//**
  23           * P0MF10 means The multiple function pin register for P0's pin 1 & pin 0. So on and so forth.
  24           * All Multiple function pin use SFR Page 2
  25           *
  26           * P0MF10 Base F9H, P0MF32 Base FAH, P0MF54 Base FBH, P0MF76 Base FCH,
  27           * P1MF10 Base FDH, P1MF32 Base FEH. P1MF54 Base FFH, P1MF76 Base F1H,
  28           * P2MF10 Base F2H, P2MF32 Base F3H, P2MF54 Base F4H, P2MF76 Base F5H,
  29           * P3MF10 Base F6H, P3MF32 Base F7H, P3MF54 Base E9H, P3MF76 Base EAH,
  30           * P4MF10 Base EBH, P4MF32 Base FCH, P4MF54 Base EDH, P4MF76 Base EEH,
  31           * P5MF10 Base EFH, P5MF32 Base E1H, P5MF54 Base E2H, P5MF76 Base E3H,
  32           * P6MF10 Base 92H, P6MF32 Base 93H, P6MF54 Base 94H, P6MF76 Base 95H,
  33           ******************************************************************************/
  34          
  35          /**************************************************************************//**
  36            * @brief      Configure multi-function pin to touch key function
  37            * @param[in]  u16TkMsk Combination of enabled scan keys. Each bit corresponds to a touch key.
  38            *             Bit 0 represents touch key 0, bit 1 represents touch key 1...
  39            * @retval     None.
  40            * @details    This function is used to configure multi-function pin to touch key function
  41           ******************************************************************************/
  42          void SetTkMultiFun(uint32_t u32TkMsk)
  43          {
  44   1          /* Avoid using the pointer to set multiple pin function registers */
  45   1          uint32_t i;
  46   1          uint32_t u32Shielding;
C51 COMPILER V9.60.0.0   TK_MULTPINFUNCTIONS                                               04/28/2025 14:43:21 PAGE 2   

  47   1      
  48   1          u32Shielding = TK_GetEnabledChannelMask(TK_SHIELDING);
  49   1          //printf("Shielding[%x]\n", u32Shielding);
  50   1          SFRS = 0x02;
  51   1      
  52   1          for (i = 0; i < (TKLIB_TOL_NUM_KEY + 3); i++)
  53   1          {
  54   2              if ((1ul << i) & u32TkMsk)
  55   2              {
  56   3                  switch (i)
  57   3                  {
  58   4                      case 0:/* P5.6 */
  59   4                          P5MF76 = (P5MF76 & 0xF0) | 10;
  60   4      
  61   4                          if (u32Shielding == 0x1)
  62   4                          {
  63   5                              //DBG_PRINTF("Shielding TK0 CKO\n");
  64   5                              MFP_P56_CLKO;
  65   5                              P56_QUASI_MODE;
  66   5                              TKCON1 |= 0x8;
  67   5                          }
  68   4      
  69   4                          break;
  70   4      
  71   4                      case 1:/* P0.0 */
  72   4                          P0MF10 = (P0MF10 & 0xF0) | 10;
  73   4                          break;
  74   4      
  75   4                      case 2:/* P0.1 */
  76   4                          P0MF10 = (P0MF10 & 0x0F) | (10 << 4);
  77   4                          break;
  78   4      
  79   4                      case 3:/* P0.2 */
  80   4                          P0MF32 = (P0MF32 & 0xF0) | 10;
  81   4                          break;
  82   4      
  83   4                      case 4:/* P0.3 */
  84   4                          P0MF32 = (P0MF32 & 0x0F) | (10 << 4);
  85   4      
  86   4                          if (u32Shielding == 0x10)
  87   4                          {
  88   5                              //DBG_PRINTF("Shielding TK4 CKO\n");    /* Disable for AVerMedia 5 key board */
  89   5                              //                    MFP_P03_CLKO;
  90   5                              //                    P03_QUASI_MODE;
  91   5                              //                    TKCON1 |= 0x8;
  92   5                          }
  93   4      
  94   4                          break;
  95   4      
  96   4                      case 5:/* P0.4 */
  97   4                          P0MF54 = (P0MF54 & 0xF0) | 10;
  98   4                          break;
  99   4      
 100   4                      case 6:/* P0.5 */
 101   4                          P0MF54 = (P0MF54 & 0x0F) | (10 << 4);
 102   4                          break;
 103   4      
 104   4                      case 7:/* P3.6 */
 105   4                          P3MF76 = (P3MF76 & 0xF0) | 10;
 106   4                          break;
 107   4      
 108   4                      case 8:/* P6.3 */
C51 COMPILER V9.60.0.0   TK_MULTPINFUNCTIONS                                               04/28/2025 14:43:21 PAGE 3   

 109   4                          P6MF32 = (P6MF32 & 0x0F) | (10 << 4);
 110   4                          break;
 111   4      
 112   4                      case 9:/* P6.2 */
 113   4                          P6MF32 = (P6MF32 & 0xF0) | 10;
 114   4                          break;
 115   4      
 116   4                      case 10:/* P6.1 */
 117   4                          P6MF10 = (P6MF10 & 0x0F) | (10 << 4);
 118   4                          break;
 119   4      
 120   4                      case 11:/* P6.0 */
 121   4                          P6MF10 = (P6MF10 & 0xF0) | 10;
 122   4                          break;
 123   4      
 124   4                      case 12:/* P4.4 */
 125   4                          P4MF54 = (P4MF54 & 0xF0) | 10;
 126   4                          break;
 127   4      
 128   4                      case 13:/* P4.3 */
 129   4                          P4MF32 = (P4MF32 & 0x0F) | (10 << 4);
 130   4                          break;
 131   4      
 132   4                      case 14:/* P4.2 */
 133   4                          P4MF32 = (P4MF32 & 0xF0) | 10;
 134   4                          break;
 135   4      
 136   4                      case 15:/* P3.2 CKO shielding only*/
 137   4                          //DBG_PRINTF("Shielding 32 CKO\n");
 138   4                          MFP_P32_CLKO;
 139   4                          P32_QUASI_MODE;
 140   4                          TKCON1 |= 0x8;
 141   4                          break;
 142   4      
 143   4                      case 16:/* P4.6 CKO shielding only */
 144   4                          //DBG_PRINTF("Shielding P46 CKO\n");
 145   4                          MFP_P46_CLKO;
 146   4                          P46_QUASI_MODE;
 147   4                          TKCON1 |= 0x8;
 148   4                          break;
 149   4      
 150   4                      case 17:/* P5.7 CKO shielding only*/
 151   4                          //DBG_PRINTF("Shielding 57 CKO\n");
 152   4                          MFP_P57_CLKO;
 153   4                          P57_QUASI_MODE;
 154   4                          TKCON1 |= 0x8;
 155   4                          break;
 156   4                  }
 157   3              }
 158   2          }
 159   1      
 160   1          SFRS = 0x00;
 161   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    606    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   TK_MULTPINFUNCTIONS                                               04/28/2025 14:43:21 PAGE 4   

   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
