C51 COMPILER V9.60.0.0   PIN_INT_LIB                                                       10/11/2022 15:26:54 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE PIN_INT_LIB
OBJECT MODULE PLACED IN .\Output\Pin_Int_LIB.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Pin_Int_LIB.C OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\..\..\Librar
                    -y\Device\Include;..\..\..\..\Library\StdDriver\inc) DEBUG PRINT(.\LST\Pin_Int_LIB.lst) TABS(2) OBJECT(.\Output\Pin_Int_L
                    -IB.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* SPDX-License-Identifier: Apache-2.0                                                                    
             - */
   4          /* Copyright(c) 2020 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   5          /*                                                                                                        
             - */
   6          /*--------------------------------------------------------------------------------------------------------
             --*/
   7          
   8          //********************************************************************************************************
             -***
   9          //  File Function: ML51 Pin interrupt demo
  10          //********************************************************************************************************
             -***
  11          #include "ML51.h"
  12          
  13          unsigned char PinIntFlag;
  14          
  15          /******************************************************************************
  16          Pin interrupt subroutine.
  17          ******************************************************************************/
  18          void PinInterrupt_ISR (void) interrupt 7
  19          {
  20   1      _push_(SFRS);
  21   1      
  22   1          SFRS = 0;
  23   1          switch(PIF)
  24   1          {
  25   2            case (SET_BIT0): PinIntFlag = SET_BIT0; PIF&=CLR_BIT0; break;
  26   2            case (SET_BIT1): PinIntFlag = SET_BIT1; PIF&=CLR_BIT1; break;
  27   2            case (SET_BIT2): PinIntFlag = SET_BIT2; PIF&=CLR_BIT2; break;
  28   2            default: break;
  29   2          }
  30   1      
  31   1      _pop_(SFRS);
  32   1      }
  33          /******************************************************************************
  34          The main C function.  Program execution starts
  35          here after stack initialization.
  36          ******************************************************************************/
  37          void main (void) 
  38          {
  39   1        /* UART0 initial for printf */
  40   1          Enable_UART0_VCOM_printf();
  41   1          printf("\n PIT test start!");
  42   1        /* Disable BOD for power down current */
  43   1          BOD_DISABLE;
  44   1      
  45   1        /* PIT initial setting */
C51 COMPILER V9.60.0.0   PIN_INT_LIB                                                       10/11/2022 15:26:54 PAGE 2   

  46   1          MFP_P17_GPIO;
  47   1          MFP_P65_GPIO;
  48   1      
  49   1          GPIO_SetMode(Port1,BIT7,GPIO_MODE_INPUT);
  50   1          GPIO_SetMode(Port6,BIT5,GPIO_MODE_INPUT);
  51   1          GPIO_Pull_Enable(Port1,BIT7,PULLUP);
  52   1          GPIO_Pull_Enable(Port6,BIT5,PULLDOWN);
  53   1          GPIO_EnableInt(PIT0,BOTH,EDGE,Port1,7);
  54   1          GPIO_EnableInt(PIT1,HIGH,LEVEL,Port6,5);
  55   1      
  56   1          ENABLE_GLOBAL_INTERRUPT;
  57   1      
  58   1        /* mail loop in power down and wakeup check flag to print */
  59   1          while(1)
  60   1          {
  61   2             set_PCON_PD;
  62   2             _nop_();
  63   2             _nop_();
  64   2      
  65   2            switch(PinIntFlag)
  66   2            {
  67   3              case (SET_BIT0): printf("\n PIT0 interrupt!"); PinIntFlag&=CLR_BIT0; break;
  68   3              case (SET_BIT1): printf("\n PIT1 interrupt!"); PinIntFlag&=CLR_BIT1; break;
  69   3              case (SET_BIT2): printf("\n PIT2 interrupt!"); PinIntFlag&=CLR_BIT2; break;
  70   3              default: break;
  71   3            }
  72   2          }
  73   1      }
  74          
  75          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    238    ----
   CONSTANT SIZE    =     72    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
